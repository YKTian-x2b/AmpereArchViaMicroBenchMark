// --------------------- FileHeader --------------------------
	// All file header info is kept as is (unless offset/size attributes)
	// The original header flags is not complete, thus discarded. 
	// 	.headerflags	@"EF_CUDA_TEXMODE_UNIFIED EF_CUDA_64BIT_ADDRESS EF_CUDA_SM86 EF_CUDA_VIRTUAL_SM(EF_CUDA_SM86)"
	// 	.elftype	@"ET_EXEC"
	// 
	// 
	.__elf_ident_osabi      51
	.__elf_ident_abiversion 7
	.__elf_type             ET_EXEC
	.__elf_machine          EM_CUDA
	.__elf_version          121 		// CUDA toolkit version 
	.__elf_entry            0 		// entry point address 
	.__elf_phoff            0x1ac0 		// program header offset, maybe updated by assembler
	.__elf_shoff            0x1780 		// section header offset, maybe updated by assembler
	.__elf_flags            0x560556 		// Flags, SM_86(0x56), COMPUTE_86(0x56) 
	.__elf_ehsize           64 		// elf header size 
	.__elf_phentsize        56 		// program entry size
	.__elf_phnum            3 		// number of program entries
	.__elf_shentsize        64 		// section entry size
	.__elf_shnum            13 		// number of sections, currently no sections can be appended/removed
	.__elf_shstrndx         1 		// Section name string table index 


  //-------------------------------------------------
  //------------ END of FileHeader ------------------
  //-------------------------------------------------



// ---------------------                                  --------------------------
	// there will always be an empty section at index 0
	.section  "", 0, SHT_NULL
	.__section_name         0x0 	// offset in .shstrtab
	.__section_type         SHT_NULL
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x0 	// maybe updated by assembler
	.__section_size         0x0 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                0 	// equivalent to set sh_addralign

// --------------------- .shstrtab                        --------------------------
	.section  ".shstrtab", 0, SHT_STRTAB
	// all strings in .shstrtab section will be kept as is.
	.__section_name         0x1 	// offset in .shstrtab
	.__section_type         SHT_STRTAB
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x40 	// maybe updated by assembler
	.__section_size         0x1ec 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                1 	// equivalent to set sh_addralign
    // .shstrtab[0] = b'\x00' 
    /*0000*/ .byte 0x00

    // .shstrtab[1] = b'.shstrtab\x00' 
    /*0001*/ .byte 0x2e, 0x73, 0x68, 0x73, 0x74, 0x72, 0x74, 0x61
    /*0009*/ .byte 0x62, 0x00

    // .shstrtab[2] = b'.strtab\x00' 
    /*000b*/ .byte 0x2e, 0x73, 0x74, 0x72, 0x74, 0x61, 0x62, 0x00

    // .shstrtab[3] = b'.symtab\x00' 
    /*0013*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x00

    // .shstrtab[4] = b'.symtab_shndx\x00' 
    /*001b*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x5f
    /*0023*/ .byte 0x73, 0x68, 0x6e, 0x64, 0x78, 0x00

    // .shstrtab[5] = b'.nv.uft.entry\x00' 
    /*0029*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x75, 0x66, 0x74, 0x2e
    /*0031*/ .byte 0x65, 0x6e, 0x74, 0x72, 0x79, 0x00

    // .shstrtab[6] = b'.nv.info\x00' 
    /*0037*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*003f*/ .byte 0x00

    // .shstrtab[7] = b'.text._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*0040*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*0048*/ .byte 0x32, 0x36, 0x67, 0x6c, 0x6f, 0x4d, 0x65, 0x6d
    /*0050*/ .byte 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79
    /*0058*/ .byte 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6b, 0x65
    /*0060*/ .byte 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6a, 0x53, 0x5f
    /*0068*/ .byte 0x50, 0x50, 0x76, 0x53, 0x31, 0x5f, 0x00

    // .shstrtab[8] = b'.nv.info._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*006f*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*0077*/ .byte 0x2e, 0x5f, 0x5a, 0x32, 0x36, 0x67, 0x6c, 0x6f
    /*007f*/ .byte 0x4d, 0x65, 0x6d, 0x5f, 0x6c, 0x61, 0x74, 0x65
    /*0087*/ .byte 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74
    /*008f*/ .byte 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50
    /*0097*/ .byte 0x6a, 0x53, 0x5f, 0x50, 0x50, 0x76, 0x53, 0x31
    /*009f*/ .byte 0x5f, 0x00

    // .shstrtab[9] = b'.nv.shared._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*00a1*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*00a9*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x32, 0x36, 0x67
    /*00b1*/ .byte 0x6c, 0x6f, 0x4d, 0x65, 0x6d, 0x5f, 0x6c, 0x61
    /*00b9*/ .byte 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x65
    /*00c1*/ .byte 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65
    /*00c9*/ .byte 0x6c, 0x50, 0x6a, 0x53, 0x5f, 0x50, 0x50, 0x76
    /*00d1*/ .byte 0x53, 0x31, 0x5f, 0x00

    // .shstrtab[10] = b'.nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*00d5*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*00dd*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*00e5*/ .byte 0x32, 0x36, 0x67, 0x6c, 0x6f, 0x4d, 0x65, 0x6d
    /*00ed*/ .byte 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79
    /*00f5*/ .byte 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6b, 0x65
    /*00fd*/ .byte 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6a, 0x53, 0x5f
    /*0105*/ .byte 0x50, 0x50, 0x76, 0x53, 0x31, 0x5f, 0x00

    // .shstrtab[11] = b'.text._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*010c*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*0114*/ .byte 0x31, 0x35, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f
    /*011c*/ .byte 0x6c, 0x32, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65
    /*0124*/ .byte 0x6c, 0x49, 0x4c, 0x69, 0x31, 0x32, 0x38, 0x45
    /*012c*/ .byte 0x45, 0x76, 0x50, 0x4b, 0x69, 0x50, 0x69, 0x00

    // .shstrtab[12] = b'.nv.info._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*0134*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*013c*/ .byte 0x2e, 0x5f, 0x5a, 0x31, 0x35, 0x66, 0x6c, 0x75
    /*0144*/ .byte 0x73, 0x68, 0x5f, 0x6c, 0x32, 0x5f, 0x6b, 0x65
    /*014c*/ .byte 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x4c, 0x69, 0x31
    /*0154*/ .byte 0x32, 0x38, 0x45, 0x45, 0x76, 0x50, 0x4b, 0x69
    /*015c*/ .byte 0x50, 0x69, 0x00

    // .shstrtab[13] = b'.nv.shared._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*015f*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*0167*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x31, 0x35, 0x66
    /*016f*/ .byte 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x6c, 0x32, 0x5f
    /*0177*/ .byte 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x4c
    /*017f*/ .byte 0x69, 0x31, 0x32, 0x38, 0x45, 0x45, 0x76, 0x50
    /*0187*/ .byte 0x4b, 0x69, 0x50, 0x69, 0x00

    // .shstrtab[14] = b'.nv.constant0._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*018c*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*0194*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*019c*/ .byte 0x31, 0x35, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f
    /*01a4*/ .byte 0x6c, 0x32, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65
    /*01ac*/ .byte 0x6c, 0x49, 0x4c, 0x69, 0x31, 0x32, 0x38, 0x45
    /*01b4*/ .byte 0x45, 0x76, 0x50, 0x4b, 0x69, 0x50, 0x69, 0x00

    // .shstrtab[15] = b'.debug_frame\x00' 
    /*01bc*/ .byte 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x66
    /*01c4*/ .byte 0x72, 0x61, 0x6d, 0x65, 0x00

    // .shstrtab[16] = b'.rel.debug_frame\x00' 
    /*01c9*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x2e, 0x64, 0x65, 0x62
    /*01d1*/ .byte 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65
    /*01d9*/ .byte 0x00

    // .shstrtab[17] = b'.rela.debug_frame\x00' 
    /*01da*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x2e, 0x64, 0x65
    /*01e2*/ .byte 0x62, 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d
    /*01ea*/ .byte 0x65, 0x00


// --------------------- .strtab                          --------------------------
	.section  ".strtab", 0, SHT_STRTAB
	// all strings in .strtab section will be kept as is.
	.__section_name         0xb 	// offset in .shstrtab
	.__section_type         SHT_STRTAB
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x22c 	// maybe updated by assembler
	.__section_size         0x23e 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                1 	// equivalent to set sh_addralign
    // .strtab[0] = b'\x00' 
    /*0000*/ .byte 0x00

    // .strtab[1] = b'.shstrtab\x00' 
    /*0001*/ .byte 0x2e, 0x73, 0x68, 0x73, 0x74, 0x72, 0x74, 0x61
    /*0009*/ .byte 0x62, 0x00

    // .strtab[2] = b'.strtab\x00' 
    /*000b*/ .byte 0x2e, 0x73, 0x74, 0x72, 0x74, 0x61, 0x62, 0x00

    // .strtab[3] = b'.symtab\x00' 
    /*0013*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x00

    // .strtab[4] = b'.symtab_shndx\x00' 
    /*001b*/ .byte 0x2e, 0x73, 0x79, 0x6d, 0x74, 0x61, 0x62, 0x5f
    /*0023*/ .byte 0x73, 0x68, 0x6e, 0x64, 0x78, 0x00

    // .strtab[5] = b'.nv.uft.entry\x00' 
    /*0029*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x75, 0x66, 0x74, 0x2e
    /*0031*/ .byte 0x65, 0x6e, 0x74, 0x72, 0x79, 0x00

    // .strtab[6] = b'.nv.info\x00' 
    /*0037*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*003f*/ .byte 0x00

    // .strtab[7] = b'_Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*0040*/ .byte 0x5f, 0x5a, 0x32, 0x36, 0x67, 0x6c, 0x6f, 0x4d
    /*0048*/ .byte 0x65, 0x6d, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e
    /*0050*/ .byte 0x63, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f
    /*0058*/ .byte 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6a
    /*0060*/ .byte 0x53, 0x5f, 0x50, 0x50, 0x76, 0x53, 0x31, 0x5f
    /*0068*/ .byte 0x00

    // .strtab[8] = b'.text._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*0069*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*0071*/ .byte 0x32, 0x36, 0x67, 0x6c, 0x6f, 0x4d, 0x65, 0x6d
    /*0079*/ .byte 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79
    /*0081*/ .byte 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6b, 0x65
    /*0089*/ .byte 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6a, 0x53, 0x5f
    /*0091*/ .byte 0x50, 0x50, 0x76, 0x53, 0x31, 0x5f, 0x00

    // .strtab[9] = b'.nv.info._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*0098*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*00a0*/ .byte 0x2e, 0x5f, 0x5a, 0x32, 0x36, 0x67, 0x6c, 0x6f
    /*00a8*/ .byte 0x4d, 0x65, 0x6d, 0x5f, 0x6c, 0x61, 0x74, 0x65
    /*00b0*/ .byte 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x65, 0x73, 0x74
    /*00b8*/ .byte 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50
    /*00c0*/ .byte 0x6a, 0x53, 0x5f, 0x50, 0x50, 0x76, 0x53, 0x31
    /*00c8*/ .byte 0x5f, 0x00

    // .strtab[10] = b'.nv.shared._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*00ca*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*00d2*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x32, 0x36, 0x67
    /*00da*/ .byte 0x6c, 0x6f, 0x4d, 0x65, 0x6d, 0x5f, 0x6c, 0x61
    /*00e2*/ .byte 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x65
    /*00ea*/ .byte 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65
    /*00f2*/ .byte 0x6c, 0x50, 0x6a, 0x53, 0x5f, 0x50, 0x50, 0x76
    /*00fa*/ .byte 0x53, 0x31, 0x5f, 0x00

    // .strtab[11] = b'.nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_\x00' 
    /*00fe*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*0106*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*010e*/ .byte 0x32, 0x36, 0x67, 0x6c, 0x6f, 0x4d, 0x65, 0x6d
    /*0116*/ .byte 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79
    /*011e*/ .byte 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6b, 0x65
    /*0126*/ .byte 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6a, 0x53, 0x5f
    /*012e*/ .byte 0x50, 0x50, 0x76, 0x53, 0x31, 0x5f, 0x00

    // .strtab[12] = b'_param\x00' 
    /*0135*/ .byte 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x00

    // .strtab[13] = b'_Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*013c*/ .byte 0x5f, 0x5a, 0x31, 0x35, 0x66, 0x6c, 0x75, 0x73
    /*0144*/ .byte 0x68, 0x5f, 0x6c, 0x32, 0x5f, 0x6b, 0x65, 0x72
    /*014c*/ .byte 0x6e, 0x65, 0x6c, 0x49, 0x4c, 0x69, 0x31, 0x32
    /*0154*/ .byte 0x38, 0x45, 0x45, 0x76, 0x50, 0x4b, 0x69, 0x50
    /*015c*/ .byte 0x69, 0x00

    // .strtab[14] = b'.text._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*015e*/ .byte 0x2e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x5f, 0x5a
    /*0166*/ .byte 0x31, 0x35, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f
    /*016e*/ .byte 0x6c, 0x32, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65
    /*0176*/ .byte 0x6c, 0x49, 0x4c, 0x69, 0x31, 0x32, 0x38, 0x45
    /*017e*/ .byte 0x45, 0x76, 0x50, 0x4b, 0x69, 0x50, 0x69, 0x00

    // .strtab[15] = b'.nv.info._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*0186*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x69, 0x6e, 0x66, 0x6f
    /*018e*/ .byte 0x2e, 0x5f, 0x5a, 0x31, 0x35, 0x66, 0x6c, 0x75
    /*0196*/ .byte 0x73, 0x68, 0x5f, 0x6c, 0x32, 0x5f, 0x6b, 0x65
    /*019e*/ .byte 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x4c, 0x69, 0x31
    /*01a6*/ .byte 0x32, 0x38, 0x45, 0x45, 0x76, 0x50, 0x4b, 0x69
    /*01ae*/ .byte 0x50, 0x69, 0x00

    // .strtab[16] = b'.nv.shared._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*01b1*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x73, 0x68, 0x61, 0x72
    /*01b9*/ .byte 0x65, 0x64, 0x2e, 0x5f, 0x5a, 0x31, 0x35, 0x66
    /*01c1*/ .byte 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x6c, 0x32, 0x5f
    /*01c9*/ .byte 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x4c
    /*01d1*/ .byte 0x69, 0x31, 0x32, 0x38, 0x45, 0x45, 0x76, 0x50
    /*01d9*/ .byte 0x4b, 0x69, 0x50, 0x69, 0x00

    // .strtab[17] = b'.nv.constant0._Z15flush_l2_kernelILi128EEvPKiPi\x00' 
    /*01de*/ .byte 0x2e, 0x6e, 0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x73
    /*01e6*/ .byte 0x74, 0x61, 0x6e, 0x74, 0x30, 0x2e, 0x5f, 0x5a
    /*01ee*/ .byte 0x31, 0x35, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f
    /*01f6*/ .byte 0x6c, 0x32, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65
    /*01fe*/ .byte 0x6c, 0x49, 0x4c, 0x69, 0x31, 0x32, 0x38, 0x45
    /*0206*/ .byte 0x45, 0x76, 0x50, 0x4b, 0x69, 0x50, 0x69, 0x00

    // .strtab[18] = b'.debug_frame\x00' 
    /*020e*/ .byte 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x66
    /*0216*/ .byte 0x72, 0x61, 0x6d, 0x65, 0x00

    // .strtab[19] = b'.rel.debug_frame\x00' 
    /*021b*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x2e, 0x64, 0x65, 0x62
    /*0223*/ .byte 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65
    /*022b*/ .byte 0x00

    // .strtab[20] = b'.rela.debug_frame\x00' 
    /*022c*/ .byte 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x2e, 0x64, 0x65
    /*0234*/ .byte 0x62, 0x75, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d
    /*023c*/ .byte 0x65, 0x00


// --------------------- .symtab                          --------------------------
	.section  ".symtab", 0, SHT_SYMTAB
	// all symbols in .symtab sections will be kept
	// but the symbol size may be changed accordingly
	.__section_name         0x13 	// offset in .shstrtab
	.__section_type         SHT_SYMTAB
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x470 	// maybe updated by assembler
	.__section_size         0xc0 	// maybe updated by assembler
	.__section_link         2
	.__section_info         0x6
	.__section_entsize      24
	.align                8 	// equivalent to set sh_addralign
    // Symbol[0] "": Container({'st_name': 0, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_NOTYPE'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 'SHN_UNDEF', 'st_value': 0, 'st_size': 0})
    /*0000*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0008*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0010*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[1] ".text._Z26gloMem_latency_test_kernelPjS_PPvS1_": Container({'st_name': 105, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 11, 'st_value': 0, 'st_size': 0})
    /*0018*/ .byte 0x69, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0b, 0x00
    /*0020*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0028*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[2] ".nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_": Container({'st_name': 254, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 9, 'st_value': 0, 'st_size': 0})
    /*0030*/ .byte 0xfe, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x00
    /*0038*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0040*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[3] ".text._Z15flush_l2_kernelILi128EEvPKiPi": Container({'st_name': 350, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 12, 'st_value': 0, 'st_size': 0})
    /*0048*/ .byte 0x5e, 0x01, 0x00, 0x00, 0x03, 0x00, 0x0c, 0x00
    /*0050*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0058*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[4] ".nv.constant0._Z15flush_l2_kernelILi128EEvPKiPi": Container({'st_name': 478, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 10, 'st_value': 0, 'st_size': 0})
    /*0060*/ .byte 0xde, 0x01, 0x00, 0x00, 0x03, 0x00, 0x0a, 0x00
    /*0068*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0070*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[5] ".debug_frame": Container({'st_name': 526, 'st_info': Container({'bind': 'STB_LOCAL', 'type': 'STT_SECTION'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 4, 'st_value': 0, 'st_size': 0})
    /*0078*/ .byte 0x0e, 0x02, 0x00, 0x00, 0x03, 0x00, 0x04, 0x00
    /*0080*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*0088*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[6] "_Z26gloMem_latency_test_kernelPjS_PPvS1_": Container({'st_name': 64, 'st_info': Container({'bind': 'STB_GLOBAL', 'type': 'STT_FUNC'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 11, 'st_value': 0, 'st_size': 640})
    /*0090*/ .byte 0x40, 0x00, 0x00, 0x00, 0x12, 0x10, 0x0b, 0x00
    /*0098*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*00a0*/ .byte 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

    // Symbol[7] "_Z15flush_l2_kernelILi128EEvPKiPi": Container({'st_name': 316, 'st_info': Container({'bind': 'STB_GLOBAL', 'type': 'STT_FUNC'}), 'st_other': Container({'local': 0, 'visibility': 'STV_DEFAULT'}), 'st_shndx': 12, 'st_value': 0, 'st_size': 2688})
    /*00a8*/ .byte 0x3c, 0x01, 0x00, 0x00, 0x12, 0x10, 0x0c, 0x00
    /*00b0*/ .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    /*00b8*/ .byte 0x80, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00


// --------------------- .debug_frame                     --------------------------
	.section	.debug_frame,"",@progbits
	.__section_name         0x1bc 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x530 	// maybe updated by assembler
	.__section_size         0xe0 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0x0
	.__section_entsize      0
	.align                1 	// equivalent to set sh_addralign
  .debug_frame:
          /*0000*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff
          /*0010*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x04, 0x7c, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0c, 0x81, 0x80
          /*0020*/ 	.byte	0x80, 0x28, 0x00, 0x08, 0xff, 0x81, 0x80, 0x28, 0x08, 0x81, 0x80, 0x80, 0x28, 0x00, 0x00, 0x00
          /*0030*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*0040*/ 	.byte	0x00, 0x00, 0x00, 0x00
          /*0044*/ 	.dword	_Z26gloMem_latency_test_kernelPjS_PPvS1_
          /*004c*/ 	.byte	0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x04, 0x18, 0x00
          /*005c*/ 	.byte	0x00, 0x00, 0x0c, 0x81, 0x80, 0x80, 0x28, 0x00, 0x04, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*006c*/ 	.byte	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*007c*/ 	.byte	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x04, 0x7c, 0xff, 0xff, 0xff, 0xff
          /*008c*/ 	.byte	0x0f, 0x0c, 0x81, 0x80, 0x80, 0x28, 0x00, 0x08, 0xff, 0x81, 0x80, 0x28, 0x08, 0x81, 0x80, 0x80
          /*009c*/ 	.byte	0x28, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*00ac*/ 	.byte	0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*00b4*/ 	.dword	_Z15flush_l2_kernelILi128EEvPKiPi
          /*00bc*/ 	.byte	0x80, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x04, 0x64, 0x02
          /*00cc*/ 	.byte	0x00, 0x00, 0x0c, 0x81, 0x80, 0x80, 0x28, 0x00, 0x04, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          /*00dc*/ 	.byte	0x00, 0x00, 0x00, 0x00
  
  
// --------------------- .nv.info                         --------------------------
	.section	.nv.info,"",@"SHT_CUDA_INFO"
	.__section_name         0x37 	// offset in .shstrtab
	.__section_type         1879048192
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x610 	// maybe updated by assembler
	.__section_size         0x60 	// maybe updated by assembler
	.__section_link         5
	.__section_info         0x0
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  
  
  	//----- nvinfo : EIATTR_REGCOUNT
  	.align		4
          /*0000*/ 	.byte	0x04, 0x2f
          /*0002*/ 	.short	(.L_1 - .L_0)
  	.align		4
  .L_0:
          /*0004*/ 	.word	index@(_Z15flush_l2_kernelILi128EEvPKiPi)
          /*0008*/ 	.word	0x00000028
  
  
  	//----- nvinfo : EIATTR_MAX_STACK_SIZE
  	.align		4
  .L_1:
          /*000c*/ 	.byte	0x04, 0x23
          /*000e*/ 	.short	(.L_3 - .L_2)
  	.align		4
  .L_2:
          /*0010*/ 	.word	index@(_Z15flush_l2_kernelILi128EEvPKiPi)
          /*0014*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_MIN_STACK_SIZE
  	.align		4
  .L_3:
          /*0018*/ 	.byte	0x04, 0x12
          /*001a*/ 	.short	(.L_5 - .L_4)
  	.align		4
  .L_4:
          /*001c*/ 	.word	index@(_Z15flush_l2_kernelILi128EEvPKiPi)
          /*0020*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_FRAME_SIZE
  	.align		4
  .L_5:
          /*0024*/ 	.byte	0x04, 0x11
          /*0026*/ 	.short	(.L_7 - .L_6)
  	.align		4
  .L_6:
          /*0028*/ 	.word	index@(_Z15flush_l2_kernelILi128EEvPKiPi)
          /*002c*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_REGCOUNT
  	.align		4
  .L_7:
          /*0030*/ 	.byte	0x04, 0x2f
          /*0032*/ 	.short	(.L_9 - .L_8)
  	.align		4
  .L_8:
          /*0034*/ 	.word	index@(_Z26gloMem_latency_test_kernelPjS_PPvS1_)
          /*0038*/ 	.word	0x00000012
  
  
  	//----- nvinfo : EIATTR_MAX_STACK_SIZE
  	.align		4
  .L_9:
          /*003c*/ 	.byte	0x04, 0x23
          /*003e*/ 	.short	(.L_11 - .L_10)
  	.align		4
  .L_10:
          /*0040*/ 	.word	index@(_Z26gloMem_latency_test_kernelPjS_PPvS1_)
          /*0044*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_MIN_STACK_SIZE
  	.align		4
  .L_11:
          /*0048*/ 	.byte	0x04, 0x12
          /*004a*/ 	.short	(.L_13 - .L_12)
  	.align		4
  .L_12:
          /*004c*/ 	.word	index@(_Z26gloMem_latency_test_kernelPjS_PPvS1_)
          /*0050*/ 	.word	0x00000000
  
  
  	//----- nvinfo : EIATTR_FRAME_SIZE
  	.align		4
  .L_13:
          /*0054*/ 	.byte	0x04, 0x11
          /*0056*/ 	.short	(.L_15 - .L_14)
  	.align		4
  .L_14:
          /*0058*/ 	.word	index@(_Z26gloMem_latency_test_kernelPjS_PPvS1_)
          /*005c*/ 	.word	0x00000000
  .L_15:
  
  
// --------------------- .nv.info._Z26gloMem_latency_test_kernelPjS_PPvS1_ --------------------------
	.section	.nv.info._Z26gloMem_latency_test_kernelPjS_PPvS1_,"",@"SHT_CUDA_INFO"
	.__section_name         0x6f 	// offset in .shstrtab
	.__section_type         1879048192
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x670 	// maybe updated by assembler
	.__section_size         0x6c 	// maybe updated by assembler
	.__section_link         5
	.__section_info         0xb
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  
  
  	//----- nvinfo : EIATTR_CUDA_API_VERSION
  	.align		4
          /*0000*/ 	.byte	0x04, 0x37
          /*0002*/ 	.short	(.L_17 - .L_16)
  .L_16:
          /*0004*/ 	.word	0x00000079
  
  
  	//----- nvinfo : EIATTR_SW2861232_WAR
  	.align		4
  .L_17:
          /*0008*/ 	.byte	0x01, 0x35
  	.zero		2
  
  
  	//----- nvinfo : EIATTR_PARAM_CBANK
  	.align		4
          /*000c*/ 	.byte	0x04, 0x0a
          /*000e*/ 	.short	(.L_19 - .L_18)
  	.align		4
  .L_18:
          /*0010*/ 	.word	index@(.nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_)
          /*0014*/ 	.short	0x0160
          /*0016*/ 	.short	0x0020
  
  
  	//----- nvinfo : EIATTR_CBANK_PARAM_SIZE
  	.align		4
  .L_19:
          /*0018*/ 	.byte	0x03, 0x19
          /*001a*/ 	.short	0x0020
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
          /*001c*/ 	.byte	0x04, 0x17
          /*001e*/ 	.short	(.L_21 - .L_20)
  .L_20:
          /*0020*/ 	.word	0x00000000
          /*0024*/ 	.short	0x0003
          /*0026*/ 	.short	0x0018
          /*0028*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
  .L_21:
          /*002c*/ 	.byte	0x04, 0x17
          /*002e*/ 	.short	(.L_23 - .L_22)
  .L_22:
          /*0030*/ 	.word	0x00000000
          /*0034*/ 	.short	0x0002
          /*0036*/ 	.short	0x0010
          /*0038*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
  .L_23:
          /*003c*/ 	.byte	0x04, 0x17
          /*003e*/ 	.short	(.L_25 - .L_24)
  .L_24:
          /*0040*/ 	.word	0x00000000
          /*0044*/ 	.short	0x0001
          /*0046*/ 	.short	0x0008
          /*0048*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
  .L_25:
          /*004c*/ 	.byte	0x04, 0x17
          /*004e*/ 	.short	(.L_27 - .L_26)
  .L_26:
          /*0050*/ 	.word	0x00000000
          /*0054*/ 	.short	0x0000
          /*0056*/ 	.short	0x0000
          /*0058*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_MAXREG_COUNT
  	.align		4
  .L_27:
          /*005c*/ 	.byte	0x03, 0x1b
          /*005e*/ 	.short	0x00ff
  
  
  	//----- nvinfo : EIATTR_EXIT_INSTR_OFFSETS
  	.align		4
          /*0060*/ 	.byte	0x04, 0x1c
          /*0062*/ 	.short	(.L_29 - .L_28)
  
  
  	//   ....[0]....
  .L_28:
          /*0064*/ 	.word	0x000001a0
  
  
  	//   ....[1]....
          /*0068*/ 	.word	0x000001e0
  .L_29:
  
  
// --------------------- .nv.info._Z15flush_l2_kernelILi128EEvPKiPi --------------------------
	.section	.nv.info._Z15flush_l2_kernelILi128EEvPKiPi,"",@"SHT_CUDA_INFO"
	.__section_name         0x134 	// offset in .shstrtab
	.__section_type         1879048192
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x6dc 	// maybe updated by assembler
	.__section_size         0x4c 	// maybe updated by assembler
	.__section_link         5
	.__section_info         0xc
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  
  
  	//----- nvinfo : EIATTR_CUDA_API_VERSION
  	.align		4
          /*0000*/ 	.byte	0x04, 0x37
          /*0002*/ 	.short	(.L_31 - .L_30)
  .L_30:
          /*0004*/ 	.word	0x00000079
  
  
  	//----- nvinfo : EIATTR_SW2861232_WAR
  	.align		4
  .L_31:
          /*0008*/ 	.byte	0x01, 0x35
  	.zero		2
  
  
  	//----- nvinfo : EIATTR_PARAM_CBANK
  	.align		4
          /*000c*/ 	.byte	0x04, 0x0a
          /*000e*/ 	.short	(.L_33 - .L_32)
  	.align		4
  .L_32:
          /*0010*/ 	.word	index@(.nv.constant0._Z15flush_l2_kernelILi128EEvPKiPi)
          /*0014*/ 	.short	0x0160
          /*0016*/ 	.short	0x0010
  
  
  	//----- nvinfo : EIATTR_CBANK_PARAM_SIZE
  	.align		4
  .L_33:
          /*0018*/ 	.byte	0x03, 0x19
          /*001a*/ 	.short	0x0010
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
          /*001c*/ 	.byte	0x04, 0x17
          /*001e*/ 	.short	(.L_35 - .L_34)
  .L_34:
          /*0020*/ 	.word	0x00000000
          /*0024*/ 	.short	0x0001
          /*0026*/ 	.short	0x0008
          /*0028*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_KPARAM_INFO
  	.align		4
  .L_35:
          /*002c*/ 	.byte	0x04, 0x17
          /*002e*/ 	.short	(.L_37 - .L_36)
  .L_36:
          /*0030*/ 	.word	0x00000000
          /*0034*/ 	.short	0x0000
          /*0036*/ 	.short	0x0000
          /*0038*/ 	.byte	0x00, 0xf0, 0x21, 0x00
  
  
  	//----- nvinfo : EIATTR_MAXREG_COUNT
  	.align		4
  .L_37:
          /*003c*/ 	.byte	0x03, 0x1b
          /*003e*/ 	.short	0x00ff
  
  
  	//----- nvinfo : EIATTR_EXIT_INSTR_OFFSETS
  	.align		4
          /*0040*/ 	.byte	0x04, 0x1c
          /*0042*/ 	.short	(.L_39 - .L_38)
  
  
  	//   ....[0]....
  .L_38:
          /*0044*/ 	.word	0x00000990
  
  
  	//   ....[1]....
          /*0048*/ 	.word	0x000009d0
  .L_39:
  
  
// --------------------- .rel.debug_frame                 --------------------------
	.section  ".rel.debug_frame", 0, SHT_REL
	// all relocation sections will be dynamically generated by assembler 
	// but most of the section header will be kept as is.
	.__section_name         0x1c9 	// offset in .shstrtab
	.__section_type         SHT_REL
	.__section_flags        0x0
	.__section_addr         0x0
	.__section_offset       0x728 	// maybe updated by assembler
	.__section_size         0x20 	// maybe updated by assembler
	.__section_link         5
	.__section_info         0x4
	.__section_entsize      16
	.align                8 	// equivalent to set sh_addralign
    // Relocation[0] : _Z15flush_l2_kernelILi128EEvPKiPi, Container({'r_offset': 180, 'r_info': 30064771074, 'r_info_sym': 7, 'r_info_type': 2})
    // Relocation[1] : _Z26gloMem_latency_test_kernelPjS_PPvS1_, Container({'r_offset': 68, 'r_info': 25769803778, 'r_info_sym': 6, 'r_info_type': 2})

// --------------------- .nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_ --------------------------
	.section	.nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_,"a",@progbits
	.__section_name         0xd5 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x2
	.__section_addr         0x0
	.__section_offset       0x748 	// maybe updated by assembler
	.__section_size         0x180 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0xb
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  .nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_:
  	.zero		384
  
  
// --------------------- .nv.constant0._Z15flush_l2_kernelILi128EEvPKiPi --------------------------
	.section	.nv.constant0._Z15flush_l2_kernelILi128EEvPKiPi,"a",@progbits
	.__section_name         0x18c 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x2
	.__section_addr         0x0
	.__section_offset       0x8c8 	// maybe updated by assembler
	.__section_size         0x170 	// maybe updated by assembler
	.__section_link         0
	.__section_info         0xc
	.__section_entsize      0
	.align                4 	// equivalent to set sh_addralign
  	.align	4
  .nv.constant0._Z15flush_l2_kernelILi128EEvPKiPi:
  	.zero		368
  
  
// --------------------- .text._Z26gloMem_latency_test_kernelPjS_PPvS1_ --------------------------
	.section	.text._Z26gloMem_latency_test_kernelPjS_PPvS1_,"ax",@progbits
	.__section_name         0x40 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x100006
	.__section_addr         0x0
	.__section_offset       0xa80 	// maybe updated by assembler
	.__section_size         0x280 	// maybe updated by assembler
	.__section_link         5
	.__section_info         0x12000006
	.__section_entsize      0
	.align                128 	// equivalent to set sh_addralign
  	.sectionflags	@"SHF_BARRIERS=1"
  	.sectioninfo	@"SHI_REGISTERS=18"
  	.align	128
          .global         _Z26gloMem_latency_test_kernelPjS_PPvS1_
          .type           _Z26gloMem_latency_test_kernelPjS_PPvS1_,@function
          .size           _Z26gloMem_latency_test_kernelPjS_PPvS1_,(.L_x_2 - _Z26gloMem_latency_test_kernelPjS_PPvS1_)
          .other          _Z26gloMem_latency_test_kernelPjS_PPvS1_,@"STO_CUDA_ENTRY STV_DEFAULT"
  _Z26gloMem_latency_test_kernelPjS_PPvS1_:
  .text._Z26gloMem_latency_test_kernelPjS_PPvS1_:
      [B------:R-:W-:Y:S02]         /*0000*/                   IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
      [B------:R-:W0:-:S01]         /*0010*/                   S2R R0, SR_TID.X ;
      [B------:R-:W-:-:S01]         /*0020*/                   MOV R3, 0x8 ;
      [B------:R-:W-:Y:S04]         /*0030*/                   ULDC.64 UR4, c[0x0][0x118] ;
      [B0-----:R-:W-:Y:S06]         /*0040*/                   IMAD.WIDE R2, R0, R3, c[0x0][0x178] ;
      [B------:R-:W5:-:S04]         /*0050*/                   LDG.E.64.STRONG.GPU R2, desc[UR4][R2.64] ;
      [B------:R-:W-:-:S06]         /*0060*/                   BAR.SYNC 0x0 ;
      [B------:R-:W-:Y:S02]         /*0070*/                   CS2R.32 R15, SR_CLOCKLO ;
      [B-----5:R-:W2:-:S04]         /*0080*/                   LDG.E.64.STRONG.GPU R2, desc[UR4][R2.64] ;
      [B--2---:R-:W2:-:S04]         /*0090*/                   LDG.E.64.STRONG.GPU R4, desc[UR4][R2.64] ;
      [B--2---:R-:W2:-:S04]         /*00a0*/                   LDG.E.64.STRONG.GPU R4, desc[UR4][R4.64] ;
      [B--2---:R-:W2:-:S04]         /*00b0*/                   LDG.E.64.STRONG.GPU R6, desc[UR4][R4.64] ;
      [B--2---:R-:W2:-:S04]         /*00c0*/                   LDG.E.64.STRONG.GPU R6, desc[UR4][R6.64] ;
      [B--2---:R-:W2:-:S04]         /*00d0*/                   LDG.E.64.STRONG.GPU R8, desc[UR4][R6.64] ;
      [B--2---:R-:W2:-:S04]         /*00e0*/                   LDG.E.64.STRONG.GPU R8, desc[UR4][R8.64] ;
      [B--2---:R-:W2:-:S04]         /*00f0*/                   LDG.E.64.STRONG.GPU R10, desc[UR4][R8.64] ;
      [B--2---:R-:W2:-:S04]         /*0100*/                   LDG.E.64.STRONG.GPU R10, desc[UR4][R10.64] ;
      [B--2---:R0:W5:-:S02]         /*0110*/                   LDG.E.64.STRONG.GPU R12, desc[UR4][R10.64] ;
      [B------:R-:W-:Y:S02]         /*0120*/                   CS2R.32 R7, SR_CLOCKLO ;
      [B-----5:R-:W-:-:S01]         /*0130*/                   ISETP.NE.U32.AND P0, PT, R12, RZ, PT ;
      [B------:R-:W-:Y:S03]         /*0140*/                   IMAD.MOV.U32 R5, RZ, RZ, 0x4 ;
      [B------:R-:W-:-:S01]         /*0150*/                   ISETP.NE.AND.EX P0, PT, R13, RZ, PT, P0 ;
      [B------:R-:W-:Y:S04]         /*0160*/                   IMAD.WIDE R2, R0, R5, c[0x0][0x160] ;
      [B------:R-:W-:-:S01]         /*0170*/                   IMAD.WIDE R4, R0, R5, c[0x0][0x168] ;
      [B------:R1:W-:-:S04]         /*0180*/                   STG.E desc[UR4][R2.64], R15 ;
      [B------:R1:W-:-:S03]         /*0190*/                   STG.E desc[UR4][R4.64], R7 ;
      [B------:R-:W-:-:S05]         /*01a0*/               @P0 EXIT ;
      [B-1----:R-:W-:-:S01]         /*01b0*/                   MOV R2, c[0x0][0x170] ;
      [B------:R-:W-:Y:S05]         /*01c0*/                   IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x174] ;
      [B------:R-:W-:-:S01]         /*01d0*/                   STG.E.64 desc[UR4][R2.64], RZ ;
      [B------:R-:W-:-:S05]         /*01e0*/                   EXIT ;
  .L_x_0:
      [B------:R-:W-:Y:S00]         /*01f0*/                   BRA `(.L_x_0);
      [B------:R-:W-:Y:S00]         /*0200*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0210*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0220*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0230*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0240*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0250*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0260*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0270*/                   NOP;
  .L_x_2:
  
  

// --------------------- .text._Z15flush_l2_kernelILi128EEvPKiPi --------------------------
	.section	.text._Z15flush_l2_kernelILi128EEvPKiPi,"ax",@progbits
	.__section_name         0x10c 	// offset in .shstrtab
	.__section_type         SHT_PROGBITS
	.__section_flags        0x6
	.__section_addr         0x0
	.__section_offset       0xd00 	// maybe updated by assembler
	.__section_size         0xa80 	// maybe updated by assembler
	.__section_link         5
	.__section_info         0x28000007
	.__section_entsize      0
	.align                128 	// equivalent to set sh_addralign
  	.sectioninfo	@"SHI_REGISTERS=40"
  	.align	128
          .global         _Z15flush_l2_kernelILi128EEvPKiPi
          .type           _Z15flush_l2_kernelILi128EEvPKiPi,@function
          .size           _Z15flush_l2_kernelILi128EEvPKiPi,(.L_x_3 - _Z15flush_l2_kernelILi128EEvPKiPi)
          .other          _Z15flush_l2_kernelILi128EEvPKiPi,@"STO_CUDA_ENTRY STV_DEFAULT"
  _Z15flush_l2_kernelILi128EEvPKiPi:
  .text._Z15flush_l2_kernelILi128EEvPKiPi:
      [B------:R-:W-:Y:S02]         /*0000*/                   IMAD.MOV.U32 R1, RZ, RZ, c[0x0][0x28] ;
      [B------:R-:W0:-:S01]         /*0010*/                   S2R R37, SR_TID.X ;
      [B------:R-:W-:Y:S03]         /*0020*/                   ULDC.64 UR4, c[0x0][0x118] ;
      [B------:R-:W1:-:S01]         /*0030*/                   S2R R20, SR_CTAID.X ;
      [B0-----:R-:W-:-:S02]         /*0040*/                   LOP3.LUT R25, R37.reuse, 0xffffffe0, RZ, 0xc0, !PT ;
      [B------:R-:W-:-:S02]         /*0050*/                   LOP3.LUT R21, R37, 0x1f, RZ, 0xc0, !PT ;
      [B-1----:R-:W-:Y:S04]         /*0060*/                   LEA R20, P0, R20, R25, 0x7 ;
      [B------:R-:W-:-:S02]         /*0070*/                   LOP3.LUT R6, R20.reuse, 0x1f, R37, 0xf8, !PT ;
      [B------:R-:W-:-:S02]         /*0080*/                   LEA.HI.X.SX32 R25, R25, RZ, 0x1, P0 ;
      [B------:R-:W-:-:S02]         /*0090*/                   LOP3.LUT R0, R20, 0x1, R21.reuse, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*00a0*/                   LEA R2, P1, R6, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*00b0*/                   LOP3.LUT R10, R20, 0x2, R21, 0xf6, !PT ;
      [B------:R-:W-:Y:S02]         /*00c0*/                   LEA R4, P0, R0, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*00d0*/                   LEA.HI.X R3, R6, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R-:W-:-:S02]         /*00e0*/                   LOP3.LUT R8, R20, 0x3, R21.reuse, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*00f0*/                   LEA R6, P1, R10, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*0100*/                   LOP3.LUT R16, R20, 0x4, R21, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*0110*/                   LEA.HI.X R5, R0, c[0x0][0x164], R25.reuse, 0x2, P0 ;
      [B------:R-:W-:-:S01]         /*0120*/                   LEA R12, P0, R8, c[0x0][0x160], 0x2 ;
      [B------:R0:W2:-:S01]         /*0130*/                   LDG.E.STRONG.GPU R0, desc[UR4][R2.64] ;
      [B------:R-:W-:Y:S02]         /*0140*/                   LEA.HI.X R7, R10, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R-:W-:-:S01]         /*0150*/                   LOP3.LUT R10, R20, 0x5, R21.reuse, 0xf6, !PT ;
      [B------:R1:W2:-:S01]         /*0160*/                   LDG.E.STRONG.GPU R36, desc[UR4][R4.64] ;
      [B------:R-:W-:-:S02]         /*0170*/                   LEA R14, P1, R16, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S01]         /*0180*/                   LOP3.LUT R18, R20, 0x6, R21, 0xf6, !PT ;
      [B------:R3:W2:-:S01]         /*0190*/                   LDG.E.STRONG.GPU R35, desc[UR4][R6.64] ;
      [B------:R-:W-:-:S02]         /*01a0*/                   LEA.HI.X R13, R8, c[0x0][0x164], R25.reuse, 0x2, P0 ;
      [B------:R-:W-:-:S02]         /*01b0*/                   LEA R8, P0, R10, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S01]         /*01c0*/                   LEA.HI.X R15, R16, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R4:W5:-:S01]         /*01d0*/                   LDG.E.STRONG.GPU R34, desc[UR4][R12.64] ;
      [B------:R-:W-:Y:S02]         /*01e0*/                   LOP3.LUT R22, R20, 0x7, R21, 0xf6, !PT ;
      [B0-----:R-:W-:-:S01]         /*01f0*/                   LEA R2, P1, R18, c[0x0][0x160], 0x2 ;
      [B------:R0:W5:-:S01]         /*0200*/                   LDG.E.STRONG.GPU R33, desc[UR4][R14.64] ;
      [B------:R-:W-:-:S02]         /*0210*/                   LOP3.LUT R16, R20, 0x8, R21, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*0220*/                   LEA.HI.X R9, R10, c[0x0][0x164], R25.reuse, 0x2, P0 ;
      [B------:R-:W-:-:S02]         /*0230*/                   LEA R10, P0, R22, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S01]         /*0240*/                   LEA.HI.X R3, R18, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R0:W5:-:S01]         /*0250*/                   LDG.E.STRONG.GPU R32, desc[UR4][R8.64] ;
      [B------:R-:W-:Y:S02]         /*0260*/                   LOP3.LUT R18, R20, 0x9, R21, 0xf6, !PT ;
      [B-1----:R-:W-:-:S01]         /*0270*/                   LEA R4, P1, R16, c[0x0][0x160], 0x2 ;
      [B------:R1:W5:-:S01]         /*0280*/                   LDG.E.STRONG.GPU R31, desc[UR4][R2.64] ;
      [B------:R-:W-:-:S02]         /*0290*/                   LEA.HI.X R11, R22, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W-:-:S02]         /*02a0*/                   LOP3.LUT R22, R20, 0xa, R21, 0xf6, !PT ;
      [B---3--:R-:W-:-:S01]         /*02b0*/                   LEA R6, P0, R18, c[0x0][0x160], 0x2 ;
      [B------:R3:W5:-:S01]         /*02c0*/                   LDG.E.STRONG.GPU R30, desc[UR4][R10.64] ;
      [B------:R-:W-:-:S02]         /*02d0*/                   LEA.HI.X R5, R16, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R-:W-:Y:S02]         /*02e0*/                   LOP3.LUT R16, R20, 0xb, R21, 0xf6, !PT ;
      [B----4-:R-:W-:-:S01]         /*02f0*/                   LEA R12, P1, R22, c[0x0][0x160], 0x2 ;
      [B------:R4:W5:-:S01]         /*0300*/                   LDG.E.STRONG.GPU R29, desc[UR4][R4.64] ;
      [B------:R-:W-:-:S02]         /*0310*/                   LEA.HI.X R7, R18, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W-:-:S02]         /*0320*/                   LOP3.LUT R18, R20, 0xc, R21.reuse, 0xf6, !PT ;
      [B0-----:R-:W-:-:S01]         /*0330*/                   LEA R8, P0, R16, c[0x0][0x160], 0x2 ;
      [B------:R0:W5:-:S01]         /*0340*/                   LDG.E.STRONG.GPU R28, desc[UR4][R6.64] ;
      [B------:R-:W-:-:S02]         /*0350*/                   LOP3.LUT R14, R20, 0xd, R21, 0xf6, !PT ;
      [B------:R-:W-:Y:S02]         /*0360*/                   LEA.HI.X R13, R22, c[0x0][0x164], R25, 0x2, P1 ;
      [B-1----:R-:W-:-:S02]         /*0370*/                   LEA R2, P1, R18, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S01]         /*0380*/                   LEA.HI.X R9, R16, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R1:W5:-:S01]         /*0390*/                   LDG.E.STRONG.GPU R27, desc[UR4][R12.64] ;
      [B------:R-:W-:-:S02]         /*03a0*/                   LOP3.LUT R16, R20, 0xe, R21.reuse, 0xf6, !PT ;
      [B---3--:R-:W-:-:S01]         /*03b0*/                   LEA R10, P0, R14, c[0x0][0x160], 0x2 ;
      [B------:R3:W5:-:S01]         /*03c0*/                   LDG.E.STRONG.GPU R26, desc[UR4][R8.64] ;
      [B------:R-:W-:-:S02]         /*03d0*/                   LOP3.LUT R24, R20, 0xf, R21, 0xf6, !PT ;
      [B------:R-:W-:Y:S02]         /*03e0*/                   LEA.HI.X R3, R18, c[0x0][0x164], R25, 0x2, P1 ;
      [B----4-:R-:W-:-:S02]         /*03f0*/                   LEA R4, P1, R16, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S01]         /*0400*/                   LEA.HI.X R11, R14, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R4:W5:-:S01]         /*0410*/                   LDG.E.STRONG.GPU R17, desc[UR4][R2.64] ;
      [B------:R-:W-:-:S02]         /*0420*/                   LOP3.LUT R14, R20, 0x10, R21.reuse, 0xf6, !PT ;
      [B0-----:R-:W-:-:S02]         /*0430*/                   LEA R6, P0, R24, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*0440*/                   LOP3.LUT R18, R20, 0x11, R21, 0xf6, !PT ;
      [B------:R-:W-:Y:S02]         /*0450*/                   LEA.HI.X R5, R16, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R-:W-:-:S01]         /*0460*/                   LEA R22, P1, R14, c[0x0][0x160], 0x2 ;
      [B------:R0:W5:-:S01]         /*0470*/                   LDG.E.STRONG.GPU R16, desc[UR4][R10.64] ;
      [B------:R-:W-:-:S02]         /*0480*/                   LEA.HI.X R7, R24, c[0x0][0x164], R25, 0x2, P0 ;
      [B-1----:R-:W-:-:S01]         /*0490*/                   LOP3.LUT R12, R20, 0x12, R21.reuse, 0xf6, !PT ;
      [B------:R1:W5:-:S01]         /*04a0*/                   LDG.E.STRONG.GPU R15, desc[UR4][R4.64] ;
      [B---3--:R-:W-:-:S02]         /*04b0*/                   LEA R8, P0, R18, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*04c0*/                   LOP3.LUT R24, R20, 0x13, R21, 0xf6, !PT ;
      [B------:R-:W-:Y:S02]         /*04d0*/                   LEA.HI.X R23, R14, c[0x0][0x164], R25, 0x2, P1 ;
      [B----4-:R-:W-:-:S01]         /*04e0*/                   LEA R2, P1, R12, c[0x0][0x160], 0x2 ;
      [B------:R3:W4:-:S01]         /*04f0*/                   LDG.E.STRONG.GPU R14, desc[UR4][R6.64] ;
      [B------:R-:W-:-:S02]         /*0500*/                   LEA.HI.X R9, R18, c[0x0][0x164], R25, 0x2, P0 ;
      [B0-----:R-:W-:-:S01]         /*0510*/                   LOP3.LUT R10, R20, 0x14, R21, 0xf6, !PT ;
      [B------:R0:W4:-:S01]         /*0520*/                   LDG.E.STRONG.GPU R13, desc[UR4][R22.64] ;
      [B------:R-:W-:-:S02]         /*0530*/                   LEA R18, P0, R24, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*0540*/                   LEA.HI.X R3, R12, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R0:W4:-:S01]         /*0550*/                   LDG.E.STRONG.GPU R12, desc[UR4][R8.64] ;
      [B-1----:R-:W-:Y:S02]         /*0560*/                   LEA R4, P1, R10, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S01]         /*0570*/                   LEA.HI.X R19, R24, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R1:W4:-:S01]         /*0580*/                   LDG.E.STRONG.GPU R11, desc[UR4][R2.64] ;
      [B------:R-:W-:-:S02]         /*0590*/                   LOP3.LUT R24, R20.reuse, 0x16, R21.reuse, 0xf6, !PT ;
      [B0-----:R-:W-:-:S02]         /*05a0*/                   LOP3.LUT R8, R20, 0x15, R21, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*05b0*/                   LEA.HI.X R5, R10, c[0x0][0x164], R25, 0x2, P1 ;
      [B---3--:R-:W-:-:S01]         /*05c0*/                   LEA R6, P0, R8, c[0x0][0x160], 0x2 ;
      [B------:R0:W3:-:S01]         /*05d0*/                   LDG.E.STRONG.GPU R10, desc[UR4][R18.64] ;
      [B------:R-:W-:Y:S02]         /*05e0*/                   LEA R22, P1, R24, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S01]         /*05f0*/                   LEA.HI.X R7, R8, c[0x0][0x164], R25.reuse, 0x2, P0 ;
      [B------:R1:W3:-:S01]         /*0600*/                   LDG.E.STRONG.GPU R9, desc[UR4][R4.64] ;
      [B------:R-:W-:Y:S03]         /*0610*/                   LEA.HI.X R23, R24, c[0x0][0x164], R25, 0x2, P1 ;
      [B------:R1:W3:-:S01]         /*0620*/                   LDG.E.STRONG.GPU R8, desc[UR4][R6.64] ;
      [B0-----:R-:W-:Y:S04]         /*0630*/                   LOP3.LUT R18, R20, 0x17, R21, 0xf6, !PT ;
      [B-1----:R-:W-:-:S01]         /*0640*/                   LEA R2, P0, R18, c[0x0][0x160], 0x2 ;
      [B------:R0:W3:-:S01]         /*0650*/                   LDG.E.STRONG.GPU R7, desc[UR4][R22.64] ;
      [B------:R-:W-:-:S02]         /*0660*/                   LOP3.LUT R24, R20, 0x19, R21, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*0670*/                   LEA.HI.X R3, R18, c[0x0][0x164], R25, 0x2, P0 ;
      [B0-----:R-:W-:Y:S03]         /*0680*/                   LOP3.LUT R22, R20, 0x18, R21, 0xf6, !PT ;
      [B------:R0:W3:-:S01]         /*0690*/                   LDG.E.STRONG.GPU R6, desc[UR4][R2.64] ;
      [B------:R-:W-:-:S02]         /*06a0*/                   LEA R18, P1, R24, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*06b0*/                   LEA R4, P0, R22, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*06c0*/                   LEA.HI.X R19, R24, c[0x0][0x164], R25.reuse, 0x2, P1 ;
      [B------:R-:W-:-:S02]         /*06d0*/                   LEA.HI.X R5, R22, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W-:Y:S04]         /*06e0*/                   LOP3.LUT R24, R20, 0x1b, R21, 0xf6, !PT ;
      [B------:R1:W3:-:S01]         /*06f0*/                   LDG.E.STRONG.GPU R5, desc[UR4][R4.64] ;
      [B------:R-:W-:Y:S03]         /*0700*/                   LEA R22, P1, R24, c[0x0][0x160], 0x2 ;
      [B-1----:R1:W3:-:S01]         /*0710*/                   LDG.E.STRONG.GPU R4, desc[UR4][R18.64] ;
      [B------:R-:W-:-:S02]         /*0720*/                   LEA.HI.X R23, R24, c[0x0][0x164], R25, 0x2, P1 ;
      [B-1----:R-:W-:Y:S04]         /*0730*/                   LOP3.LUT R18, R20, 0x1a, R21, 0xf6, !PT ;
      [B0-----:R-:W-:-:S02]         /*0740*/                   LEA R2, P0, R18, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*0750*/                   LOP3.LUT R24, R20, 0x1c, R21, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*0760*/                   LEA.HI.X R3, R18, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W-:Y:S04]         /*0770*/                   LEA R18, P0, R24, c[0x0][0x160], 0x2 ;
      [B------:R0:W3:-:S01]         /*0780*/                   LDG.E.STRONG.GPU R3, desc[UR4][R2.64] ;
      [B------:R-:W-:-:S02]         /*0790*/                   LEA.HI.X R19, R24, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W-:-:S02]         /*07a0*/                   LOP3.LUT R24, R20.reuse, 0x1e, R21, 0xf6, !PT ;
      [B------:R-:W-:-:S02]         /*07b0*/                   LOP3.LUT R37, R20.reuse, 0x1f, R37, 0xf4, !PT ;
      [B------:R-:W3:-:S04]         /*07c0*/                   LDG.E.STRONG.GPU R19, desc[UR4][R18.64] ;
      [B0-----:R0:W3:-:S02]         /*07d0*/                   LDG.E.STRONG.GPU R2, desc[UR4][R22.64] ;
      [B0-----:R-:W-:Y:S04]         /*07e0*/                   LOP3.LUT R22, R20, 0x1d, R21, 0xf6, !PT ;
      [B------:R-:W-:Y:S04]         /*07f0*/                   LEA R20, P0, R22, c[0x0][0x160], 0x2 ;
      [B------:R-:W-:-:S02]         /*0800*/                   LEA.HI.X R21, R22, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W-:Y:S03]         /*0810*/                   LEA R22, P0, R24, c[0x0][0x160], 0x2 ;
      [B------:R-:W3:-:S01]         /*0820*/                   LDG.E.STRONG.GPU R20, desc[UR4][R20.64] ;
      [B------:R-:W-:-:S02]         /*0830*/                   LEA.HI.X R23, R24, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W-:Y:S04]         /*0840*/                   LEA R24, P0, R37, c[0x0][0x160], 0x2 ;
      [B------:R-:W3:-:S01]         /*0850*/                   LDG.E.STRONG.GPU R23, desc[UR4][R22.64] ;
      [B------:R-:W-:Y:S05]         /*0860*/                   LEA.HI.X R25, R37, c[0x0][0x164], R25, 0x2, P0 ;
      [B------:R-:W3:-:S01]         /*0870*/                   LDG.E.STRONG.GPU R24, desc[UR4][R24.64] ;
      [B--2---:R-:W-:Y:S04]         /*0880*/                   IADD3 R0, R35, R36, R0 ;
      [B-----5:R-:W-:Y:S04]         /*0890*/                   IADD3 R0, R33, R34, R0 ;
      [B------:R-:W-:Y:S04]         /*08a0*/                   IADD3 R0, R31, R32, R0 ;
      [B------:R-:W-:Y:S04]         /*08b0*/                   IADD3 R0, R29, R30, R0 ;
      [B------:R-:W-:Y:S04]         /*08c0*/                   IADD3 R0, R27, R28, R0 ;
      [B------:R-:W-:Y:S04]         /*08d0*/                   IADD3 R0, R17, R26, R0 ;
      [B------:R-:W-:Y:S04]         /*08e0*/                   IADD3 R0, R15, R16, R0 ;
      [B----4-:R-:W-:Y:S04]         /*08f0*/                   IADD3 R0, R13, R14, R0 ;
      [B------:R-:W-:Y:S04]         /*0900*/                   IADD3 R0, R11, R12, R0 ;
      [B---3--:R-:W-:Y:S04]         /*0910*/                   IADD3 R0, R9, R10, R0 ;
      [B------:R-:W-:Y:S04]         /*0920*/                   IADD3 R0, R7, R8, R0 ;
      [B------:R-:W-:Y:S04]         /*0930*/                   IADD3 R0, R5, R6, R0 ;
      [B------:R-:W-:Y:S04]         /*0940*/                   IADD3 R0, R3, R4, R0 ;
      [B------:R-:W-:Y:S04]         /*0950*/                   IADD3 R0, R19, R2, R0 ;
      [B------:R-:W-:Y:S05]         /*0960*/                   IADD3 R23, R23, R20, R0 ;
      [B------:R-:W-:Y:S05]         /*0970*/                   IMAD.IADD R23, R23, 0x1, R24 ;
      [B------:R-:W-:Y:S13]         /*0980*/                   ISETP.NE.AND P0, PT, R23, RZ, PT ;
      [B------:R-:W-:-:S05]         /*0990*/              @!P0 EXIT ;
      [B------:R-:W-:-:S02]         /*09a0*/                   IMAD.MOV.U32 R2, RZ, RZ, c[0x0][0x168] ;
      [B------:R-:W-:Y:S05]         /*09b0*/                   IMAD.MOV.U32 R3, RZ, RZ, c[0x0][0x16c] ;
      [B------:R-:W-:-:S01]         /*09c0*/                   STG.E desc[UR4][R2.64], R23 ;
      [B------:R-:W-:-:S05]         /*09d0*/                   EXIT ;
  .L_x_1:
      [B------:R-:W-:Y:S00]         /*09e0*/                   BRA `(.L_x_1);
      [B------:R-:W-:Y:S00]         /*09f0*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a00*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a10*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a20*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a30*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a40*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a50*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a60*/                   NOP;
      [B------:R-:W-:Y:S00]         /*0a70*/                   NOP;
  .L_x_3:

  //-------------------------------------------------
  //---------------- END of sections ----------------
  //-------------------------------------------------


// Program segment PT_PHDR, 5 
  .__segment  "PT_PHDR", 5 
  .__segment_offset  0x1ac0   		// maybe updated by assembler 
  .__segment_vaddr   0x0   		// Seems always 0? 
  .__segment_paddr   0x0   		// ??? 
  .__segment_filesz  0xa8   		// file size, maybe updated by assembler 
  .__segment_memsz   0xa8   		// file size + nobits sections, maybe updated by assembler 
  .__segment_align     8   		//  

// Program segment PT_LOAD, 5 
  .__segment  "PT_LOAD", 5 
  .__segment_offset  0x748   		// maybe updated by assembler 
  .__segment_vaddr   0x0   		// Seems always 0? 
  .__segment_paddr   0x0   		// ??? 
  .__segment_filesz  0x1038   		// file size, maybe updated by assembler 
  .__segment_memsz   0x1038   		// file size + nobits sections, maybe updated by assembler 
  .__segment_align     8   		//  
  .__segment_startsection    ".nv.constant0._Z26gloMem_latency_test_kernelPjS_PPvS1_"  		// first section in this segment 
  .__segment_endsection      ".text._Z15flush_l2_kernelILi128EEvPKiPi"  		// last  section in this segment 

// Program segment PT_LOAD, 5 
  .__segment  "PT_LOAD", 5 
  .__segment_offset  0x1ac0   		// maybe updated by assembler 
  .__segment_vaddr   0x0   		// Seems always 0? 
  .__segment_paddr   0x0   		// ??? 
  .__segment_filesz  0xa8   		// file size, maybe updated by assembler 
  .__segment_memsz   0xa8   		// file size + nobits sections, maybe updated by assembler 
  .__segment_align     8   		//  
  .__segment_startsection    "@PROGRAM_HEADER"  		// first section in this segment 
  .__segment_endsection      "@PROGRAM_HEADER"  		// last  section in this segment 


  //-------------------------------------------------
  //---------------- END of segments ----------------
  //-------------------------------------------------



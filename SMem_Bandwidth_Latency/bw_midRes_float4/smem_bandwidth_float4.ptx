//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32688072
// Cuda compilation tools, release 12.1, V12.1.105
// Based on NVVM 7.0.1
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z24SMem_writeBW_test_kernelPjS_Pf
// _ZZ24SMem_writeBW_test_kernelPjS_PfE3Arr has been demoted

.visible .entry _Z24SMem_writeBW_test_kernelPjS_Pf(
	.param .u64 _Z24SMem_writeBW_test_kernelPjS_Pf_param_0,
	.param .u64 _Z24SMem_writeBW_test_kernelPjS_Pf_param_1,
	.param .u64 _Z24SMem_writeBW_test_kernelPjS_Pf_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<19>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<10>;
	// demoted variable
	.shared .align 16 .b8 _ZZ24SMem_writeBW_test_kernelPjS_PfE3Arr[49152];

	ld.param.u64 	%rd2, [_Z24SMem_writeBW_test_kernelPjS_Pf_param_0];
	ld.param.u64 	%rd4, [_Z24SMem_writeBW_test_kernelPjS_Pf_param_1];
	ld.param.u64 	%rd3, [_Z24SMem_writeBW_test_kernelPjS_Pf_param_2];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r1, %tid.x;
	cvt.rn.f64.s32 	%fd1, %r1;
	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	cvt.rn.f32.f64 	%f1, %fd2;
	add.f64 	%fd3, %fd1, 0d4000000000000000;
	cvt.rn.f32.f64 	%f2, %fd3;
	add.f64 	%fd4, %fd1, 0d4008000000000000;
	cvt.rn.f32.f64 	%f3, %fd4;
	add.f64 	%fd5, %fd1, 0d4010000000000000;
	cvt.rn.f32.f64 	%f4, %fd5;
	// begin inline asm
	bar.sync 0;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, %clock;
	// end inline asm
	shl.b32 	%r10, %r1, 4;
	mov.u32 	%r11, _ZZ24SMem_writeBW_test_kernelPjS_PfE3Arr;
	add.s32 	%r12, %r11, %r10;
	add.s32 	%r17, %r12, 4096;
	mov.u32 	%r18, 0;

$L__BB0_1:
	st.shared.v4.f32 	[%r17+-4096], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+-3584], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+-3072], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+-2560], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+-2048], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+-1536], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+-1024], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+-512], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+512], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+1024], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+1536], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+2048], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+2560], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+3072], {%f1, %f2, %f3, %f4};
	st.shared.v4.f32 	[%r17+3584], {%f1, %f2, %f3, %f4};
	add.s32 	%r17, %r17, 8192;
	add.s32 	%r18, %r18, 512;
	setp.lt.u32 	%p1, %r18, 2048;
	@%p1 bra 	$L__BB0_1;

	cvta.to.global.u64 	%rd5, %rd2;
	// begin inline asm
	bar.sync 0;
	// end inline asm
	// begin inline asm
	mov.u32 %r13, %clock;
	// end inline asm
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	add.s64 	%rd8, %rd1, %rd6;
	st.global.u32 	[%rd7], %r8;
	st.global.u32 	[%rd8], %r13;
	shl.b32 	%r14, %r1, 2;
	add.s32 	%r16, %r11, %r14;
	ld.shared.f32 	%f5, [%r16];
	setp.geu.f32 	%p2, %f5, 0f00000000;
	@%p2 bra 	$L__BB0_4;

	cvta.to.global.u64 	%rd9, %rd3;
	st.global.f32 	[%rd9], %f5;

$L__BB0_4:
	ret;

}


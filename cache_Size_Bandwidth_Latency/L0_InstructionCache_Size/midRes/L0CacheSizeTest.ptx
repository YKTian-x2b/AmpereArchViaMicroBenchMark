//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32688072
// Cuda compilation tools, release 12.1, V12.1.105
// Based on NVVM 7.0.1
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z23L0CacheSize_test_kernel6float4iPjS0_Pf

.visible .entry _Z23L0CacheSize_test_kernel6float4iPjS0_Pf(
	.param .align 16 .b8 _Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_0[16],
	.param .u32 _Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_1,
	.param .u64 _Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_2,
	.param .u64 _Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_3,
	.param .u64 _Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_4
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<35>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r16, [_Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_1];
	ld.param.u64 	%rd1, [_Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_2];
	ld.param.u64 	%rd2, [_Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_3];
	ld.param.u64 	%rd3, [_Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_4];
	ld.param.f32 	%f35, [_Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_0];
	ld.param.f32 	%f2, [_Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_0+4];
	ld.param.f32 	%f3, [_Z23L0CacheSize_test_kernel6float4iPjS0_Pf_param_0+8];
	mov.u32 	%r1, %tid.x;
	setp.lt.s32 	%p1, %r16, 1;
	@%p1 bra 	$L__BB0_7;

	add.s32 	%r17, %r16, -1;
	and.b32  	%r32, %r16, 3;
	setp.lt.u32 	%p2, %r17, 3;
	@%p2 bra 	$L__BB0_4;

	sub.s32 	%r31, %r16, %r32;

$L__BB0_3:
	.pragma "nounroll";
	fma.rn.f32 	%f19, %f35, %f3, %f2;
	fma.rn.f32 	%f20, %f19, %f3, %f2;
	fma.rn.f32 	%f21, %f20, %f3, %f2;
	fma.rn.f32 	%f35, %f21, %f3, %f2;
	add.s32 	%r31, %r31, -4;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB0_3;

$L__BB0_4:
	setp.eq.s32 	%p4, %r32, 0;
	@%p4 bra 	$L__BB0_7;

$L__BB0_6:
	.pragma "nounroll";
	fma.rn.f32 	%f35, %f35, %f3, %f2;
	add.s32 	%r32, %r32, -1;
	setp.ne.s32 	%p5, %r32, 0;
	@%p5 bra 	$L__BB0_6;

$L__BB0_7:
	// begin inline asm
	bar.sync 0;
	// end inline asm
	// begin inline asm
	mov.u32 %r18, %clock;
	// end inline asm
	@%p1 bra 	$L__BB0_14;

	add.s32 	%r19, %r16, -1;
	and.b32  	%r34, %r16, 3;
	setp.lt.u32 	%p7, %r19, 3;
	@%p7 bra 	$L__BB0_11;

	sub.s32 	%r33, %r16, %r34;

$L__BB0_10:
	.pragma "nounroll";
	fma.rn.f32 	%f23, %f35, %f3, %f2;
	fma.rn.f32 	%f24, %f23, %f3, %f2;
	fma.rn.f32 	%f25, %f24, %f3, %f2;
	fma.rn.f32 	%f35, %f25, %f3, %f2;
	add.s32 	%r33, %r33, -4;
	setp.ne.s32 	%p8, %r33, 0;
	@%p8 bra 	$L__BB0_10;

$L__BB0_11:
	setp.eq.s32 	%p9, %r34, 0;
	@%p9 bra 	$L__BB0_14;

$L__BB0_13:
	.pragma "nounroll";
	fma.rn.f32 	%f35, %f35, %f3, %f2;
	add.s32 	%r34, %r34, -1;
	setp.ne.s32 	%p10, %r34, 0;
	@%p10 bra 	$L__BB0_13;

$L__BB0_14:
	// begin inline asm
	mov.u32 %r20, %clock;
	// end inline asm
	and.b32  	%r21, %r1, 31;
	setp.ne.s32 	%p11, %r21, 0;
	@%p11 bra 	$L__BB0_16;

	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r23, %ctaid.x;
	mul.lo.s32 	%r24, %r23, %r22;
	shr.s32 	%r25, %r24, 5;
	shr.s32 	%r26, %r1, 31;
	shr.u32 	%r27, %r26, 27;
	add.s32 	%r28, %r1, %r27;
	shr.s32 	%r29, %r28, 5;
	add.s32 	%r30, %r25, %r29;
	cvta.to.global.u64 	%rd4, %rd3;
	mul.wide.s32 	%rd5, %r30, 4;
	add.s64 	%rd6, %rd4, %rd5;
	st.global.f32 	[%rd6], %f35;
	cvta.to.global.u64 	%rd7, %rd1;
	add.s64 	%rd8, %rd7, %rd5;
	st.global.u32 	[%rd8], %r18;
	cvta.to.global.u64 	%rd9, %rd2;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.u32 	[%rd10], %r20;

$L__BB0_16:
	ret;

}


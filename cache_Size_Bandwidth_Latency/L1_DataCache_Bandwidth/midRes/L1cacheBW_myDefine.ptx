//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32688072
// Cuda compilation tools, release 12.1, V12.1.105
// Based on NVVM 7.0.1
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z25L1DatacacheBW_test_kernelPjS_PfS0_

.visible .entry _Z25L1DatacacheBW_test_kernelPjS_PfS0_(
	.param .u64 _Z25L1DatacacheBW_test_kernelPjS_PfS0__param_0,
	.param .u64 _Z25L1DatacacheBW_test_kernelPjS_PfS0__param_1,
	.param .u64 _Z25L1DatacacheBW_test_kernelPjS_PfS0__param_2,
	.param .u64 _Z25L1DatacacheBW_test_kernelPjS_PfS0__param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<100>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<85>;


	ld.param.u64 	%rd10, [_Z25L1DatacacheBW_test_kernelPjS_PfS0__param_0];
	ld.param.u64 	%rd12, [_Z25L1DatacacheBW_test_kernelPjS_PfS0__param_1];
	ld.param.u64 	%rd11, [_Z25L1DatacacheBW_test_kernelPjS_PfS0__param_2];
	ld.param.u64 	%rd13, [_Z25L1DatacacheBW_test_kernelPjS_PfS0__param_3];
	cvta.to.global.u64 	%rd1, %rd12;
	mov.u32 	%r7, %tid.x;
	cvt.s64.s32 	%rd2, %r7;
	mul.wide.s32 	%rd14, %r7, 4;
	add.s64 	%rd84, %rd13, %rd14;
	mov.u32 	%r11, 0;
	mov.u64 	%rd83, %rd84;

$L__BB0_1:
	// begin inline asm
	ld.global.ca.b32 %f3, [%rd83];
	// end inline asm
	add.s64 	%rd16, %rd83, 128;
	// begin inline asm
	ld.global.ca.b32 %f4, [%rd16];
	// end inline asm
	add.s64 	%rd17, %rd83, 256;
	// begin inline asm
	ld.global.ca.b32 %f5, [%rd17];
	// end inline asm
	add.s64 	%rd18, %rd83, 384;
	// begin inline asm
	ld.global.ca.b32 %f6, [%rd18];
	// end inline asm
	add.s64 	%rd19, %rd83, 512;
	// begin inline asm
	ld.global.ca.b32 %f7, [%rd19];
	// end inline asm
	add.s64 	%rd20, %rd83, 640;
	// begin inline asm
	ld.global.ca.b32 %f8, [%rd20];
	// end inline asm
	add.s64 	%rd21, %rd83, 768;
	// begin inline asm
	ld.global.ca.b32 %f9, [%rd21];
	// end inline asm
	add.s64 	%rd22, %rd83, 896;
	// begin inline asm
	ld.global.ca.b32 %f10, [%rd22];
	// end inline asm
	add.s64 	%rd23, %rd83, 1024;
	// begin inline asm
	ld.global.ca.b32 %f11, [%rd23];
	// end inline asm
	add.s64 	%rd24, %rd83, 1152;
	// begin inline asm
	ld.global.ca.b32 %f12, [%rd24];
	// end inline asm
	add.s64 	%rd25, %rd83, 1280;
	// begin inline asm
	ld.global.ca.b32 %f13, [%rd25];
	// end inline asm
	add.s64 	%rd26, %rd83, 1408;
	// begin inline asm
	ld.global.ca.b32 %f14, [%rd26];
	// end inline asm
	add.s64 	%rd27, %rd83, 1536;
	// begin inline asm
	ld.global.ca.b32 %f15, [%rd27];
	// end inline asm
	add.s64 	%rd28, %rd83, 1664;
	// begin inline asm
	ld.global.ca.b32 %f16, [%rd28];
	// end inline asm
	add.s64 	%rd29, %rd83, 1792;
	// begin inline asm
	ld.global.ca.b32 %f17, [%rd29];
	// end inline asm
	add.s64 	%rd30, %rd83, 1920;
	// begin inline asm
	ld.global.ca.b32 %f18, [%rd30];
	// end inline asm
	add.s64 	%rd31, %rd83, 2048;
	// begin inline asm
	ld.global.ca.b32 %f19, [%rd31];
	// end inline asm
	add.s64 	%rd32, %rd83, 2176;
	// begin inline asm
	ld.global.ca.b32 %f20, [%rd32];
	// end inline asm
	add.s64 	%rd33, %rd83, 2304;
	// begin inline asm
	ld.global.ca.b32 %f21, [%rd33];
	// end inline asm
	add.s64 	%rd34, %rd83, 2432;
	// begin inline asm
	ld.global.ca.b32 %f22, [%rd34];
	// end inline asm
	add.s64 	%rd35, %rd83, 2560;
	// begin inline asm
	ld.global.ca.b32 %f23, [%rd35];
	// end inline asm
	add.s64 	%rd36, %rd83, 2688;
	// begin inline asm
	ld.global.ca.b32 %f24, [%rd36];
	// end inline asm
	add.s64 	%rd37, %rd83, 2816;
	// begin inline asm
	ld.global.ca.b32 %f25, [%rd37];
	// end inline asm
	add.s64 	%rd38, %rd83, 2944;
	// begin inline asm
	ld.global.ca.b32 %f26, [%rd38];
	// end inline asm
	add.s64 	%rd39, %rd83, 3072;
	// begin inline asm
	ld.global.ca.b32 %f27, [%rd39];
	// end inline asm
	add.s64 	%rd40, %rd83, 3200;
	// begin inline asm
	ld.global.ca.b32 %f28, [%rd40];
	// end inline asm
	add.s64 	%rd41, %rd83, 3328;
	// begin inline asm
	ld.global.ca.b32 %f29, [%rd41];
	// end inline asm
	add.s64 	%rd42, %rd83, 3456;
	// begin inline asm
	ld.global.ca.b32 %f30, [%rd42];
	// end inline asm
	add.s64 	%rd43, %rd83, 3584;
	// begin inline asm
	ld.global.ca.b32 %f31, [%rd43];
	// end inline asm
	add.s64 	%rd44, %rd83, 3712;
	// begin inline asm
	ld.global.ca.b32 %f32, [%rd44];
	// end inline asm
	add.s64 	%rd45, %rd83, 3840;
	// begin inline asm
	ld.global.ca.b32 %f33, [%rd45];
	// end inline asm
	add.s64 	%rd46, %rd83, 3968;
	// begin inline asm
	ld.global.ca.b32 %f34, [%rd46];
	// end inline asm
	add.s64 	%rd83, %rd83, 4096;
	add.s32 	%r11, %r11, 1024;
	setp.lt.u32 	%p1, %r11, 24576;
	@%p1 bra 	$L__BB0_1;

	cvta.to.global.u64 	%rd6, %rd11;
	cvta.to.global.u64 	%rd7, %rd10;
	// begin inline asm
	bar.sync 0;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, %clock;
	// end inline asm
	mov.f32 	%f99, 0f00000000;
	mov.u32 	%r12, 0;

$L__BB0_3:
	// begin inline asm
	ld.global.ca.b32 %f36, [%rd84];
	// end inline asm
	add.f32 	%f68, %f99, %f36;
	add.s64 	%rd48, %rd84, 128;
	// begin inline asm
	ld.global.ca.b32 %f37, [%rd48];
	// end inline asm
	add.f32 	%f69, %f68, %f37;
	add.s64 	%rd49, %rd84, 256;
	// begin inline asm
	ld.global.ca.b32 %f38, [%rd49];
	// end inline asm
	add.f32 	%f70, %f69, %f38;
	add.s64 	%rd50, %rd84, 384;
	// begin inline asm
	ld.global.ca.b32 %f39, [%rd50];
	// end inline asm
	add.f32 	%f71, %f70, %f39;
	add.s64 	%rd51, %rd84, 512;
	// begin inline asm
	ld.global.ca.b32 %f40, [%rd51];
	// end inline asm
	add.f32 	%f72, %f71, %f40;
	add.s64 	%rd52, %rd84, 640;
	// begin inline asm
	ld.global.ca.b32 %f41, [%rd52];
	// end inline asm
	add.f32 	%f73, %f72, %f41;
	add.s64 	%rd53, %rd84, 768;
	// begin inline asm
	ld.global.ca.b32 %f42, [%rd53];
	// end inline asm
	add.f32 	%f74, %f73, %f42;
	add.s64 	%rd54, %rd84, 896;
	// begin inline asm
	ld.global.ca.b32 %f43, [%rd54];
	// end inline asm
	add.f32 	%f75, %f74, %f43;
	add.s64 	%rd55, %rd84, 1024;
	// begin inline asm
	ld.global.ca.b32 %f44, [%rd55];
	// end inline asm
	add.f32 	%f76, %f75, %f44;
	add.s64 	%rd56, %rd84, 1152;
	// begin inline asm
	ld.global.ca.b32 %f45, [%rd56];
	// end inline asm
	add.f32 	%f77, %f76, %f45;
	add.s64 	%rd57, %rd84, 1280;
	// begin inline asm
	ld.global.ca.b32 %f46, [%rd57];
	// end inline asm
	add.f32 	%f78, %f77, %f46;
	add.s64 	%rd58, %rd84, 1408;
	// begin inline asm
	ld.global.ca.b32 %f47, [%rd58];
	// end inline asm
	add.f32 	%f79, %f78, %f47;
	add.s64 	%rd59, %rd84, 1536;
	// begin inline asm
	ld.global.ca.b32 %f48, [%rd59];
	// end inline asm
	add.f32 	%f80, %f79, %f48;
	add.s64 	%rd60, %rd84, 1664;
	// begin inline asm
	ld.global.ca.b32 %f49, [%rd60];
	// end inline asm
	add.f32 	%f81, %f80, %f49;
	add.s64 	%rd61, %rd84, 1792;
	// begin inline asm
	ld.global.ca.b32 %f50, [%rd61];
	// end inline asm
	add.f32 	%f82, %f81, %f50;
	add.s64 	%rd62, %rd84, 1920;
	// begin inline asm
	ld.global.ca.b32 %f51, [%rd62];
	// end inline asm
	add.f32 	%f83, %f82, %f51;
	add.s64 	%rd63, %rd84, 2048;
	// begin inline asm
	ld.global.ca.b32 %f52, [%rd63];
	// end inline asm
	add.f32 	%f84, %f83, %f52;
	add.s64 	%rd64, %rd84, 2176;
	// begin inline asm
	ld.global.ca.b32 %f53, [%rd64];
	// end inline asm
	add.f32 	%f85, %f84, %f53;
	add.s64 	%rd65, %rd84, 2304;
	// begin inline asm
	ld.global.ca.b32 %f54, [%rd65];
	// end inline asm
	add.f32 	%f86, %f85, %f54;
	add.s64 	%rd66, %rd84, 2432;
	// begin inline asm
	ld.global.ca.b32 %f55, [%rd66];
	// end inline asm
	add.f32 	%f87, %f86, %f55;
	add.s64 	%rd67, %rd84, 2560;
	// begin inline asm
	ld.global.ca.b32 %f56, [%rd67];
	// end inline asm
	add.f32 	%f88, %f87, %f56;
	add.s64 	%rd68, %rd84, 2688;
	// begin inline asm
	ld.global.ca.b32 %f57, [%rd68];
	// end inline asm
	add.f32 	%f89, %f88, %f57;
	add.s64 	%rd69, %rd84, 2816;
	// begin inline asm
	ld.global.ca.b32 %f58, [%rd69];
	// end inline asm
	add.f32 	%f90, %f89, %f58;
	add.s64 	%rd70, %rd84, 2944;
	// begin inline asm
	ld.global.ca.b32 %f59, [%rd70];
	// end inline asm
	add.f32 	%f91, %f90, %f59;
	add.s64 	%rd71, %rd84, 3072;
	// begin inline asm
	ld.global.ca.b32 %f60, [%rd71];
	// end inline asm
	add.f32 	%f92, %f91, %f60;
	add.s64 	%rd72, %rd84, 3200;
	// begin inline asm
	ld.global.ca.b32 %f61, [%rd72];
	// end inline asm
	add.f32 	%f93, %f92, %f61;
	add.s64 	%rd73, %rd84, 3328;
	// begin inline asm
	ld.global.ca.b32 %f62, [%rd73];
	// end inline asm
	add.f32 	%f94, %f93, %f62;
	add.s64 	%rd74, %rd84, 3456;
	// begin inline asm
	ld.global.ca.b32 %f63, [%rd74];
	// end inline asm
	add.f32 	%f95, %f94, %f63;
	add.s64 	%rd75, %rd84, 3584;
	// begin inline asm
	ld.global.ca.b32 %f64, [%rd75];
	// end inline asm
	add.f32 	%f96, %f95, %f64;
	add.s64 	%rd76, %rd84, 3712;
	// begin inline asm
	ld.global.ca.b32 %f65, [%rd76];
	// end inline asm
	add.f32 	%f97, %f96, %f65;
	add.s64 	%rd77, %rd84, 3840;
	// begin inline asm
	ld.global.ca.b32 %f66, [%rd77];
	// end inline asm
	add.f32 	%f98, %f97, %f66;
	add.s64 	%rd78, %rd84, 3968;
	// begin inline asm
	ld.global.ca.b32 %f67, [%rd78];
	// end inline asm
	add.f32 	%f99, %f98, %f67;
	add.s64 	%rd84, %rd84, 4096;
	add.s32 	%r12, %r12, 1024;
	setp.lt.u32 	%p2, %r12, 24576;
	@%p2 bra 	$L__BB0_3;

	// begin inline asm
	mov.u32 %r10, %clock;
	// end inline asm
	shl.b64 	%rd79, %rd2, 2;
	add.s64 	%rd80, %rd7, %rd79;
	add.s64 	%rd81, %rd1, %rd79;
	st.global.u32 	[%rd80], %r8;
	st.global.u32 	[%rd81], %r10;
	add.s64 	%rd82, %rd6, %rd79;
	st.global.f32 	[%rd82], %f99;
	ret;

}


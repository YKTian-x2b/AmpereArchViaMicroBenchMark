//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32688072
// Cuda compilation tools, release 12.1, V12.1.105
// Based on NVVM 7.0.1
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z23L2cacheBW_float2_kernelPK6float2Pf

.visible .entry _Z23L2cacheBW_float2_kernelPK6float2Pf(
	.param .u64 _Z23L2cacheBW_float2_kernelPK6float2Pf_param_0,
	.param .u64 _Z23L2cacheBW_float2_kernelPK6float2Pf_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<65>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<22>;


	ld.param.u64 	%rd18, [_Z23L2cacheBW_float2_kernelPK6float2Pf_param_0];
	ld.param.u64 	%rd1, [_Z23L2cacheBW_float2_kernelPK6float2Pf_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 13;
	mov.u32 	%r3, %tid.x;
	add.s32 	%r4, %r2, %r3;
	shl.b32 	%r5, %r4, 3;
	cvt.u64.u32 	%rd19, %r5;
	and.b64  	%rd20, %rd19, 2097144;
	add.s64 	%rd2, %rd18, %rd20;
	// begin inline asm
	ld.global.cg.v2.f32 {%f2, %f3}, [%rd2];
	// end inline asm
	add.f32 	%f34, %f2, %f3;
	add.f32 	%f35, %f34, 0f00000000;
	add.s64 	%rd3, %rd2, 4096;
	// begin inline asm
	ld.global.cg.v2.f32 {%f4, %f5}, [%rd3];
	// end inline asm
	add.f32 	%f36, %f4, %f5;
	add.f32 	%f37, %f35, %f36;
	add.s64 	%rd4, %rd2, 8192;
	// begin inline asm
	ld.global.cg.v2.f32 {%f6, %f7}, [%rd4];
	// end inline asm
	add.f32 	%f38, %f6, %f7;
	add.f32 	%f39, %f37, %f38;
	add.s64 	%rd5, %rd2, 12288;
	// begin inline asm
	ld.global.cg.v2.f32 {%f8, %f9}, [%rd5];
	// end inline asm
	add.f32 	%f40, %f8, %f9;
	add.f32 	%f41, %f39, %f40;
	add.s64 	%rd6, %rd2, 16384;
	// begin inline asm
	ld.global.cg.v2.f32 {%f10, %f11}, [%rd6];
	// end inline asm
	add.f32 	%f42, %f10, %f11;
	add.f32 	%f43, %f41, %f42;
	add.s64 	%rd7, %rd2, 20480;
	// begin inline asm
	ld.global.cg.v2.f32 {%f12, %f13}, [%rd7];
	// end inline asm
	add.f32 	%f44, %f12, %f13;
	add.f32 	%f45, %f43, %f44;
	add.s64 	%rd8, %rd2, 24576;
	// begin inline asm
	ld.global.cg.v2.f32 {%f14, %f15}, [%rd8];
	// end inline asm
	add.f32 	%f46, %f14, %f15;
	add.f32 	%f47, %f45, %f46;
	add.s64 	%rd9, %rd2, 28672;
	// begin inline asm
	ld.global.cg.v2.f32 {%f16, %f17}, [%rd9];
	// end inline asm
	add.f32 	%f48, %f16, %f17;
	add.f32 	%f49, %f47, %f48;
	add.s64 	%rd10, %rd2, 32768;
	// begin inline asm
	ld.global.cg.v2.f32 {%f18, %f19}, [%rd10];
	// end inline asm
	add.f32 	%f50, %f18, %f19;
	add.f32 	%f51, %f49, %f50;
	add.s64 	%rd11, %rd2, 36864;
	// begin inline asm
	ld.global.cg.v2.f32 {%f20, %f21}, [%rd11];
	// end inline asm
	add.f32 	%f52, %f20, %f21;
	add.f32 	%f53, %f51, %f52;
	add.s64 	%rd12, %rd2, 40960;
	// begin inline asm
	ld.global.cg.v2.f32 {%f22, %f23}, [%rd12];
	// end inline asm
	add.f32 	%f54, %f22, %f23;
	add.f32 	%f55, %f53, %f54;
	add.s64 	%rd13, %rd2, 45056;
	// begin inline asm
	ld.global.cg.v2.f32 {%f24, %f25}, [%rd13];
	// end inline asm
	add.f32 	%f56, %f24, %f25;
	add.f32 	%f57, %f55, %f56;
	add.s64 	%rd14, %rd2, 49152;
	// begin inline asm
	ld.global.cg.v2.f32 {%f26, %f27}, [%rd14];
	// end inline asm
	add.f32 	%f58, %f26, %f27;
	add.f32 	%f59, %f57, %f58;
	add.s64 	%rd15, %rd2, 53248;
	// begin inline asm
	ld.global.cg.v2.f32 {%f28, %f29}, [%rd15];
	// end inline asm
	add.f32 	%f60, %f28, %f29;
	add.f32 	%f61, %f59, %f60;
	add.s64 	%rd16, %rd2, 57344;
	// begin inline asm
	ld.global.cg.v2.f32 {%f30, %f31}, [%rd16];
	// end inline asm
	add.f32 	%f62, %f30, %f31;
	add.f32 	%f63, %f61, %f62;
	add.s64 	%rd17, %rd2, 61440;
	// begin inline asm
	ld.global.cg.v2.f32 {%f32, %f33}, [%rd17];
	// end inline asm
	add.f32 	%f64, %f32, %f33;
	add.f32 	%f1, %f63, %f64;
	setp.eq.f32 	%p1, %f1, 0f00000000;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd21, %rd1;
	st.global.f32 	[%rd21], %f1;

$L__BB0_2:
	ret;

}

